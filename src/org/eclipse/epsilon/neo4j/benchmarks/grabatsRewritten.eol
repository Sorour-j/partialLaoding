model Core driver Neo4j {nsuri = "org.amma.dsl.jdt.core"};
model DOM driver Neo4j {nsuri = "org.amma.dsl.jdt.dom"};
model PrimitiveTypes driver Neo4j {nsuri = "org.amma.dsl.jdt.primitiveTypes"};

matches.addAll(TypeDeclaration.all.collect(td:TypeDeclaration|td.bodyDeclarations.select(
	md:MethodDeclaration|md.modifiers.exists(mod:Modifier|mod.public==true)
	and 
	md.modifiers.exists(mod:Modifier|mod.static==true)
	and
	md.returnType.isTypeOf(SimpleType)
	and 
	md.returnType.name.fullyQualifiedName == td.name.fullyQualifiedName
	))
.flatten()
.collect(names:MethodDeclaration|names.returnType.name.fullyQualifiedName)
);

matches.size().println();